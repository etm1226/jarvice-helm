apiVersion: eksctl.io/v1alpha5
kind: ClusterConfig

# JARVICE deploy config
jarvice:
  # imagePullSecret is base64 encoded.
  imagePullSecret: # echo "_json_key:$(cat gcr.io.json)" | base64 -w 0
  JARVICE_LICENSE_LIC:
  JARVICE_REMOTE_USER:
  JARVICE_REMOTE_APIKEY:
  JARVICE_CLUSTER_TYPE: upstream # "downstream" signifies a downstream deploy
  JARVICE_SCHED_SERVER_KEY: # "<user>:<password>" allows upstream auth
  JARVICE_JOBS_DOMAIN: # Set this if using ingress
  JARVICE_JOBS_LB_SERVICE: true  # Set to false if using JARVICE_JOBS_DOMAIN
  ingress:  # Traefik is used for ingress
    cert_file: # Optional, provide path to SSL certificate file
    key_file: # Optional, provide path to SSL key file
    loadBalancerIP: # Optional, provide a load balancer IP

  # default is to give new user signups 10GB of standard block storage;
  # unset any of these values to prevent that altogether;
  JARVICE_PVC_VAULT_SIZE: 10
  JARVICE_PVC_VAULT_NAME: persistent
  JARVICE_PVC_VAULT_STORAGECLASS: jarvice-user
  JARVICE_PVC_VAULT_ACCESSMODES: ReadWriteOnce

# EKS cluster deploy config
metadata:
  name: jarvice  # Name matches "owned" tag name in jarvice-compute node groups
  region: us-west-2
  #version: "1.14"

# To put nodes in a single availability zone, configure nodeGroups below
#availabilityZones: ["us-west-2a", "us-west-2b", "us-west-2c"]

nodeGroups:
  # jarvice-system
  - name: ng-jarvice-system-0
    labels:
        node-role.kubernetes.io/jarvice-system: ""
    instanceType: m5.2xlarge  # https://aws.amazon.com/ec2/instance-types/
    #instanceType: m5.xlarge  # "downstream" cluster type
    minSize: 3
    maxSize: 3
    desiredCapacity: 3
    volumeSize: 10
    volumeType: gp2
    availabilityZones:
        - us-west-2a
        #- us-west-2b
        #- us-west-2c
    ssh:
        publicKeyPath: ~/.ssh/id_rsa.pub
        #publicKeyName: <aws-ssh-key-name>
    iam:
        withAddonPolicies:
            autoScaler: true

  # jarvice-compute - non-GPU node group
  - name: ng-jarvice-compute-0
    labels:
        node-role.kubernetes.io/jarvice-compute: ""
    taints:
        node-role.kubernetes.io/jarvice-compute: ":NoSchedule"
    tags:
      k8s.io/cluster-autoscaler/enabled: "true"
      k8s.io/cluster-autoscaler/jarvice: "owned"  # Matches metadata.name
    instanceType: c5.18xlarge  # https://aws.amazon.com/ec2/instance-types/
    minSize: 3
    maxSize: 5
    desiredCapacity: 4
    volumeSize: 100
    volumeType: gp2
    availabilityZones:
        - us-west-2a
        #- us-west-2b
        #- us-west-2c
    ssh:
        publicKeyPath: ~/.ssh/id_rsa.pub
        #publicKeyName: <aws-ssh-key-name>
    preBootstrapCommands:
        # Disable hyper-threading.  Visit the following link for details:
        # https://aws.amazon.com/blogs/compute/disabling-intel-hyper-threading-technology-on-amazon-linux/
        - "for n in $(cat /sys/devices/system/cpu/cpu*/topology/thread_siblings_list | cut -s -d, -f2- | tr ',' '\n' | sort -un); do echo 0 > /sys/devices/system/cpu/cpu${n}/online; done"
    iam:
        withAddonPolicies:
            autoScaler: true

  # jarvice-compute - GPU node group
  #- name: ng-jarvice-compute-gpu-0
  #  labels:
  #      node-role.kubernetes.io/jarvice-compute: ""
  #  taints:
  #      node-role.kubernetes.io/jarvice-compute: ":NoSchedule"
  #  tags:
  #    k8s.io/cluster-autoscaler/enabled: "true"
  #    k8s.io/cluster-autoscaler/jarvice: "owned"  # Matches metadata.name
  #  instanceType: p2.xlarge  # https://aws.amazon.com/ec2/instance-types/
  #  minSize: 3
  #  maxSize: 5
  #  desiredCapacity: 4
  #  volumeSize: 100
  #  volumeType: gp2
  #  availabilityZones:
  #      - us-west-2a
  #      #- us-west-2b
  #      #- us-west-2c
  #  ssh:
  #      publicKeyPath: ~/.ssh/id_rsa.pub
  #      #publicKeyName: <aws-ssh-key-name>
  #  preBootstrapCommands:
  #      # Disable hyper-threading.  Visit the following link for details:
  #      # https://aws.amazon.com/blogs/compute/disabling-intel-hyper-threading-technology-on-amazon-linux/
  #    - "for n in $(cat /sys/devices/system/cpu/cpu*/topology/thread_siblings_list | cut -s -d, -f2- | tr ',' '\n' | sort -un); do echo 0 > /sys/devices/system/cpu/cpu${n}/online; done"
  #  iam:
  #      withAddonPolicies:
  #          autoScaler: true

