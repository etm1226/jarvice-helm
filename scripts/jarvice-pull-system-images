#!/bin/bash

jarvice_chart_dir=$(realpath --relative-to=$(pwd) $(dirname $0)/..)
values_yaml=$jarvice_chart_dir/values.yaml

JARVICE_REGISTRY=us-docker.pkg.dev
JARVICE_REPOSITORY=jarvice-system/images
JARVICE_VERSION=

PUSH_REGISTRY=
PUSH_REPOSITORY=$JARVICE_REPOSITORY

DOCKER=docker

JARVICE_IMAGES="jarvice-dal jarvice-scheduler jarvice-k8s-scheduler jarvice-pod-scheduler jarvice-api jarvice-mc-portal init jarvice-appsync jarvice-dockerbuild jarvice-dockerpull"
EXTRA_IMAGES=$(grep -i image: $values_yaml 2>/dev/null | sed 's/#.*//' | awk '{print $2}')

function usage {
    cat <<EOF
Usage:
    $0 [options]

Options:
    --jarvice-version <version>     JARVICE version to pull (required)
    --push-registry <registry>      Registry to push images to
    --push-repository <repository>  Repository/namespace to push images to
                                    (Default: $PUSH_REPOSITORY)
    --push-and-remove               Remove local images after successful push
    --docker <executable>           Docker executable (Default: $DOCKER)

Example:
$0 \\
    --jarvice-version jarvice-master-3.0.0-1.202005151836 \\
    --push-registry localhost:5000 \\
    --push-repository $PUSH_REPOSITORY
EOF
}

while [ $# -gt 0 ]; do
    case $1 in
        --help)
            usage
            exit 0
            ;;
        --jarvice-version)
            JARVICE_VERSION=$2
            shift; shift
            ;;
        --push-registry)
            PUSH_REGISTRY=$2
            shift; shift
            ;;
        --push-repository)
            PUSH_REPOSITORY=$2
            shift; shift
            ;;
        --push-and-remove)
            PUSH_AND_REMOVE=1
            shift;
            ;;
        --docker)
            DOCKER=$2
            shift; shift
            ;;
        *)
            usage
            exit 1
            ;;
    esac
done

DOCKER=$(type -p $DOCKER)
if [ -z "$DOCKER" ]; then
    cat <<EOF
Could not find 'docker' in PATH.  It may not be installed.
Run 'install-docker' from the 'jarvice-helm/scripts' directory to install it.
EOF
    exit 1
fi

$DOCKER info >/dev/null 2>&1
[ "$?" != "0" ] && echo "User '$USER' is not able to communicate with the docker daemon" && exit 1

[ -z "$JARVICE_VERSION" ] && usage && exit 1

set -e

JARVICE_REG_REPO=$JARVICE_REGISTRY/$JARVICE_REPOSITORY
PUSH_REG_REPO=
[ -n "$PUSH_REGISTRY" ] && PUSH_REG_REPO=$PUSH_REGISTRY/$PUSH_REPOSITORY
for i in $JARVICE_IMAGES; do
    $DOCKER pull $JARVICE_REG_REPO/$i:$JARVICE_VERSION
    if [ -n "$PUSH_REG_REPO" ]; then
        $DOCKER tag $JARVICE_REG_REPO/$i:$JARVICE_VERSION $PUSH_REG_REPO/$i:$JARVICE_VERSION
        $DOCKER push $PUSH_REG_REPO/$i:$JARVICE_VERSION
        [ -n "$PUSH_AND_REMOVE" ] && $DOCKER rmi $PUSH_REG_REPO/$i:$JARVICE_VERSION $JARVICE_REG_REPO/$i:$JARVICE_VERSION
    fi
done

for i in $EXTRA_IMAGES; do
    $DOCKER pull $i
    if [ -n "$PUSH_REGISTRY" ]; then
        push_image=$PUSH_REGISTRY/$(echo ${i#*/})
        $DOCKER tag $i $push_image
        $DOCKER push $push_image
        [ -n "$PUSH_AND_REMOVE" ] && $DOCKER rmi $push_image $i
    fi
done

