#!/bin/bash

DOCKER=$(type -p docker)
if [ -z "$DOCKER" ]; then
    cat <<EOF
Could not find 'docker' in PATH.  It may not be installed.
Run 'install-docker' from the 'jarvice-helm/scripts' directory to install it.
EOF
    exit 1
fi

SUDO=
if [ "$EUID" != "0" ]; then
    SUDO=sudo
    SUID=$($SUDO id -u)
    if [ "$SUID" != "0" ]; then
        echo "Could not verify sudo access.  Cannot continue."
        echo "Please resolve sudo access before re-running this script."
        exit 1
    else
        echo "* Verified sudo access..."
    fi
fi

. /etc/os-release
DISTRO="$ID$VERSION_ID"
if [ "$ID" != "ubuntu" ] && [ "$ID" != "centos" ] && [ "$ID" != "rhel" ]; then
    echo "This distro is not supported."
    exit 1
fi

set -e

export DEBIAN_FRONTEND=noninteractive
if [ "$ID" = "ubuntu" ]; then
    $SUDO apt-get -y update
    $SUDO apt-get -y install --no-install-recommends \
        curl jq apt-transport-https ca-certificates
else
    $SUDO yum -y install epel-release
    $SUDO yum -y install curl jq
fi

# Set up CUDA repo
CUDA_REPO_ID=$ID
[ "$ID" = "centos" ] && CUDA_REPO_ID=rhel
CUDA_REPO_REL=$(echo $VERSION_ID | sed -e 's/\.//')
ARCH=$(arch)
CUDA_REPO_ARCH=$ARCH
[ "$ID" = "ubuntu" ] && [ "$CUDA_REPO_ARCH" = "ppc64le" ] && \
    CUDA_REPO_ARCH=ppc64el

URL_NVIDIA_CUDA=http://developer.download.nvidia.com/compute/cuda/repos/$CUDA_REPO_ID$CUDA_REPO_REL/$CUDA_REPO_ARCH
URL_NVIDIA_CUDA_KEY=$URL_NVIDIA_CUDA/7fa2af80.pub

repo_file=
if [ "$ID" = "ubuntu" ]; then
    repo_file=/etc/apt/sources.list.d/nvidia.list
    cat <<EOF | $SUDO tee $repo_file >/dev/null
deb $URL_NVIDIA_CUDA  /
EOF
else
    repo_file=/etc/yum.repos.d/nvidia.repo
    cat <<EOF | $SUDO tee $repo_file >/dev/null
[cuda]
name=cuda
baseurl=$URL_NVIDIA_CUDA
gpgcheck=1
enabled=1
gpgkey=$URL_NVIDIA_CUDA_KEY

EOF
fi

# Set up NVIDIA docker repos
URL_NVIDIA_GITHUB=https://nvidia.github.io
URL_NVIDIA_GITHUB_KEY=$URL_NVIDIA_GITHUB/nvidia-docker/gpgkey
URL_NVIDIA_DOCKER=$URL_NVIDIA_GITHUB/nvidia-docker/$DISTRO/nvidia-docker
if [ "$ID" = "ubuntu" ]; then
    curl -fsSL $URL_NVIDIA_DOCKER.list | $SUDO tee -a $repo_file >/dev/null
else
    curl -fsSL $URL_NVIDIA_DOCKER.repo | $SUDO tee -a $repo_file >/dev/null
fi

daemon_json_bak=
if [ -f /etc/docker/daemon.json ]; then
    cp -f /etc/docker/daemon.json /etc/docker/daemon.json~
    daemon_json_bak=yes
fi

if [ "$ID" = "ubuntu" ]; then
    curl -fsSL $URL_NVIDIA_CUDA_KEY | $SUDO apt-key add -
    curl -fsSL $URL_NVIDIA_GITHUB_KEY | $SUDO apt-key add -
    $SUDO apt-get -y update
    $SUDO apt-get -y install cuda nvidia-docker2
else
    $SUDO yum -y install cuda nvidia-docker2
fi

if [ -n "$daemon_json_bak" ]; then
    echo "Previous /etc/docker/daemon.json was copied to /etc/docker/daemon.json~"
    echo "nvidia-docker2 package may have overwritten it"
fi

echo "Setting default docker runtime to: nvidia"
cat /etc/docker/daemon.json | jq '."default-runtime" = "nvidia"' | \
    tee /etc/docker/daemon.json

CUDA_RUN_ARCH=
[ "$ARCH" != "x86_64" ] && CUDA_RUN_ARCH="-$ARCH"
cat <<EOF
NVIDIA docker and it's dependencies have been installed.  Please reboot to
load the NVIDIA drivers.  After reboot, execute the following to validate:
sudo docker run --rm nvidia/cuda$CUDA_RUN_ARCH:9.0-base nvidia-smi
EOF

