jarvice:
  # imagePullSecret is base64 encoded.
  imagePullSecret: # echo "_json_key:$(cat gcr.io.json)" | base64 -w 0
  JARVICE_LICENSE_LIC:

  # JARVICE_REMOTE_* settings are used for application synchronization
  JARVICE_REMOTE_API_URL: https://api.jarvice.com
  JARVICE_REMOTE_USER:
  JARVICE_REMOTE_APIKEY:
  JARVICE_APPSYNC_USERONLY: false

  JARVICE_LOCAL_REGISTRY: # jarvice-registry:443
  JARVICE_LOCAL_REPO_BASE: jarvice

  JARVICE_SYSTEM_REGISTRY: gcr.io
  JARVICE_SYSTEM_REPO_BASE: jarvice-system
  JARVICE_IMAGES_TAG: jarvice-master
  JARVICE_IMAGES_VERSION: # auto-set (ignored) if installing from chart repo

  JARVICE_DEFAULT_CLUSTER_URL: # "http://jarvice-k8s-scheduler:8080"

  # JARVICE_JOBS_DOMAIN: # jarvice.my-domain.com/job$   # (path based ingress)
  JARVICE_JOBS_DOMAIN: # my-domain.com  # (host based ingress)
  JARVICE_JOBS_LB_SERVICE: false

  # jarvice.tolerations applies to all of the jarvice_* components below.
  # This can be overridden by updating tolerations in each jarvice_* stanza.
  tolerations: '[{"key": "node-role.kubernetes.io/jarvice-system", "effect": "NoSchedule", "operator": "Exists"}]'
  nodeSelector: # '{"node-role.kubernetes.io/jarvice-system": ""}'

  # JARVICE_DBHOST and JARVICE_DBUSER only need to change if using a database
  # not provided by this helm chart
  JARVICE_DBHOST: jarvice-db
  JARVICE_DBUSER: root
  JARVICE_DBPASSWD: Pass1234

  JARVICE_PVC_VAULT_NAME:
  JARVICE_PVC_VAULT_STORAGECLASS:
  JARVICE_PVC_VAULT_VOLUMENAME:   # do not use with dynamic provisioning
  JARVICE_PVC_VAULT_ACCESSMODES:  # e.g. "ReadWriteMany,ReadOnlyMany"
  JARVICE_PVC_VAULT_SIZE:         # gigabytes
  JARVICE_PVC_VAULT_SUBPATH:      # optional subpath (supports substitutions)

  JARVICE_POD_SCHED_LOGLEVEL: 30

  # JARVICE_MAIL_CONF can be overridden with jarvice_api.env.JARVICE_MAIL_CONF
  # and jarvice_scheduler.env.JARVICE_MAIL_CONF
  JARVICE_MAIL_CONF: |
      [mail]
      from: JARVICE Job Status <DoNotReply@localhost>
      ;admins: root@localhost
      [smtp]
      server: jarvice-smtpd:25
      ;username: DoNotReply@localhost
      ;password: Pass1234

  # Global setting for enabling a secure NetworkPolicy for all JARVICE services
  # The global setting can be overridden within individual services below
  networkPolicy:
    enabled: true

  # Review the following for more information on "skinning" JARVICE with
  # the optional jarvice.settings.configMap:
  # https://github.com/nimbix/jarvice-helm#customize-jarvice-files-via-a-configmap
  settings:
    configMap: jarvice-settings

  # Preference is to provide TLS through the ingress controller, please see:
  #     https://github.com/nimbix/jarvice-helm#kubernetes-ingress-controller
  # Otherwise, the default jarvice-tls secret can be overridden here.
  tls:
    crt: # base64 encoded.  e.g. Derive w/ base64 -w 0 <site-domain>.pem
    key: # base64 encoded.  e.g. Derive w/ base64 -w 0 <site-domain>.key

  JARVICE_SYSTEM_NAMESPACE: # auto-detected, should not need to be updated
  JARVICE_JOBS_NAMESPACE: # auto-set, should not need to be updated
  JARVICE_BUILDS_NAMESPACE: # auto-set, should not need to be updated
  JARVICE_PULLS_NAMESPACE: # auto-set, should not need to be updated
  JARVICE_DAEMONSETS_NAMESPACE: # auto-set, should not need to be updated

  # Optionally, quick enable DaemonSets here.  More details can be found at:
  # https://github.com/nimbix/jarvice-helm#kubernetes-device-plugins
  # https://github.com/nimbix/jarvice-helm#install-recommended-daemonsets
  # If running multiple JARVICE deployments, enable daemonsets for only one.
  daemonsets:
    tolerations: '[{"key": "node-role.kubernetes.io/jarvice-compute", "effect": "NoSchedule", "operator": "Exists"}]'
    nodeSelector: # '{"node-role.kubernetes.io/jarvice-compute": ""}'
    cache_pull:
      enabled: false
      tolerations: #'[{"key": "node-role.kubernetes.io/jarvice-compute", "effect": "NoSchedule", "operator": "Exists"}, {"key": "CriticalAddonsOnly", "operator": "Exists"}]'
      nodeSelector: # '{"node-role.kubernetes.io/jarvice-compute": ""}'
      image: nimbix/jarvice-cache-pull:latest
    lxcfs:
      enabled: false
      tolerations: #'[{"key": "node-role.kubernetes.io/jarvice-compute", "effect": "NoSchedule", "operator": "Exists"}, {"key": "CriticalAddonsOnly", "operator": "Exists"}]'
      nodeSelector: # '{"node-role.kubernetes.io/jarvice-compute": ""}'
      image: nimbix/lxcfs:3.0.3-3
    nvidia:
      enabled: false
      tolerations: #'[{"key": "node-role.kubernetes.io/jarvice-compute", "effect": "NoSchedule", "operator": "Exists"}, {"key": "CriticalAddonsOnly", "operator": "Exists"}]'
      nodeSelector: # '{"node-role.kubernetes.io/jarvice-compute": ""}'
      image: nvidia/k8s-device-plugin:1.11
    xilinx_fpga:
      enabled: false
      tolerations: #'[{"key": "node-role.kubernetes.io/jarvice-compute", "effect": "NoSchedule", "operator": "Exists"}, {"key": "CriticalAddonsOnly", "operator": "Exists"}]'
      # Xilinx FPGA only support amd64 arch
      nodeSelector: '{"kubernetes.io/arch": "amd64"}'  # '{"node-role.kubernetes.io/jarvice-compute": "", "kubernetes.io/arch": "amd64"}'
      image: xilinxatg/xilinx_k8s_fpga_plugin:latest
    rdma:
      enabled: false
      tolerations: #'[{"key": "node-role.kubernetes.io/jarvice-compute", "effect": "NoSchedule", "operator": "Exists"}, {"key": "CriticalAddonsOnly", "operator": "Exists"}, {"key": "jarvice.com/rdma", "operator": "Exists",  "effect": "NoSchedule"}]'
      nodeSelector: # '{"node-role.kubernetes.io/jarvice-compute": ""}'
      image: jarvice/k8s-rdma-device:1.0.1


# Database server previously set up?  Set enabled to false.
jarvice_db:
  enabled: true
  replicaCount: 1
  resources:
    limits:
      cpu: 250m
      memory: 2Gi
  tolerations: # '[{"key": "node-role.kubernetes.io/jarvice-db", "effect": "NoSchedule", "operator": "Exists"}]'
  nodeSelector: # '{"node-role.kubernetes.io/jarvice-db": ""}'
  networkPolicy:
    enabled: # Inherits from jarvice.networkPolicy.enabled if unset
  image: mysql:5.6.41
  persistence:
    enabled: false
    # Set to "keep" to prevent removal or jarvice-db-pvc on helm delete
    resourcePolicy: ""  # "keep"
    # Use empty existingClaimName for dynamic provisioning via storageClass
    existingClaimName: # "jarvice-db-pvc"
    # storageClass: "-"
    storageClass: "jarvice-db"
    accessMode: ReadWriteOnce
    size: 8Gi
  securityContext:
    enabled: false  # Enable when PersistentVolume is root squashed
    fsGroup: 999
    runAsUser: 999
  # MYSQL_ROOT_PASSWORD inherits from jarvice.JARVICE_DBPASSWD if unset
  # MYSQL_USER only inherits from jarvice.JARVICE_DBUSER if
  #     jarvice.JARVICE_DBUSER != 'root'
  # MYSQL_PASSWORD is only used if MYSQL_USER is set or
  #     jarvice.JARVICE_DBUSER != 'root'
  # MYSQL_PASSWORD inherits from jarvice.JARVICE_DBPASSWD if unset
  env:
    MYSQL_ROOT_PASSWORD: # Pass1234
    MYSQL_USER: # nimbix # optional, additional superuser
    MYSQL_PASSWORD: # Pass1234

# Enable to use a kubernetes CronJob to regularly dump the JARVICE database
jarvice_db_dump:
  enabled: false
  schedule: "0 4 * * *"
  successfulJobsHistoryLimit: 3
  failedJobsHistoryLimit: 1
  deleteOldBackups:
    enabled: true
    keep: 14  # Number of dumps to keep
  tolerations: # '[{"key": "node-role.kubernetes.io/jarvice-db", "effect": "NoSchedule", "operator": "Exists"}]'
  nodeSelector: # '{"node-role.kubernetes.io/jarvice-db": ""}'
  persistence:
    # Set to "keep" to prevent removal or jarvice-db-dump-pvc on helm delete
    resourcePolicy: ""  # "keep"
    # Use empty existingClaimName for dynamic provisioning via storageClass
    existingClaimName: # "jarvice-db-dump-pvc"
    # storageClass: "-"
    storageClass: "jarvice-db-dump"
    accessMode: ReadWriteOnce
    size: 50Gi
  securityContext:
    enabled: false  # Enable when PersistentVolume is root squashed
    fsGroup: 999
    runAsUser: 999

# jarvice_smtpd may be disabled when not being used in the following settings:
# jarvice.JARVICE_MAIL_CONF
# jarvice_scheduler.env.JARVICE_MAIL_CONF
# jarvice_api.env.JARVICE_MAIL_CONF
# jarvice_mc_portal.env.JARVICE_PORTAL_MAIL_SERVER
jarvice_smtpd:
  enabled: true
  replicaCount: 2
  # PodDisruptionBudget default requires 25% minimum of pods must be running
  pdb:
    minAvailable: "25%"
  # antiAffinity default of "soft" prefers that pods run on diff nodes.
  # Set to "hard" to require pods to run on diff nodes.
  antiAffinity: "soft"
  resources:
    limits:
      cpu: 100m
      memory: 128Mi
  tolerations: # '[{"key": "node-role.kubernetes.io/jarvice-smtpd", "effect": "NoSchedule", "operator": "Exists"}]'
  nodeSelector: # '{"node-role.kubernetes.io/jarvice-smtpd": ""}'
  networkPolicy:
    enabled: # Inherits from jarvice.networkPolicy.enabled if unset
  image: nimbix/postfix:3.11_3.4.9-r0

# Web service to map a username to full Linux identity based on inspection
# of a shared filesystem:  https://github.com/nimbix/idmapper
# Enable by setting jarvice_idmapper.enabled to true.  Then, configure shared
# filesystem settings under jarvice_idmapper.filesystem and jarvice_idmapper.env
jarvice_idmapper:
  enabled: false
  replicaCount: 2
  # PodDisruptionBudget default requires 25% minimum of pods must be running
  pdb:
    minAvailable: "25%"
  # antiAffinity default of "soft" prefers that pods run on diff nodes.
  # Set to "hard" to require pods to run on diff nodes.
  antiAffinity: "soft"
  resources:
    limits:
      cpu: 100m
      memory: 128Mi
  tolerations: # '[{"key": "node-role.kubernetes.io/jarvice-idmapper", "effect": "NoSchedule", "operator": "Exists"}]'
  nodeSelector: # '{"node-role.kubernetes.io/jarvice-idmapper": ""}'
  networkPolicy:
    enabled: # Inherits from jarvice.networkPolicy.enabled if unset
  image: nimbix/idmapper
  # Shared filesystem settings.  Defaults to hostPath if NFS server is not set
  filesystem:
    path: /home
    server: # nfs.my-domain.com
  # Visit https://github.com/nimbix/idmapper for environment variable details
  env:
    HOMEPATH: "/home/%u/"
    UPNPATH: "false"

# Memcached server previously set up?  Set jarvice_memcached.enabled to false.
# Then, set JARVICE_PORTAL_MEMCACHED_LOCATIONS below in jarvice_mc_portal env.
jarvice_memcached:
  enabled: true
  replicaCount: 3
  # PodDisruptionBudget default requires 2 minimum pods must be running
  pdb:
    minAvailable: 2
  # antiAffinity default of "soft" prefers that pods run on diff nodes.
  # Set to "hard" to require pods to run on diff nodes.
  antiAffinity: "soft"
  resources:
    limits:
      cpu: 250m
      memory: 512Mi
  tolerations: # '[{"key": "node-role.kubernetes.io/jarvice-memcached", "effect": "NoSchedule", "operator": "Exists"}]'
  nodeSelector: # '{"node-role.kubernetes.io/jarvice-memcached": ""}'
  networkPolicy:
    enabled: # Inherits from jarvice.networkPolicy.enabled if unset
  image: memcached:1.5
  maxItemMemory: 64
  verbosity: v
  extendedOptions: modern

# Want to run the docker registry in JARVICE namespace?  Set enabled to true.
# Then set JARVICE_LOCAL_REGISTRY to jarvice-registry:443 as seen above
# in the jarvice: stanza.  Use ingressHost or set loadBalancerIP as desired.
jarvice_registry:
  enabled: false
  replicaCount: 1
  loadBalancerIP:
  ingressHost: # jarvice-registry.my-domain.com
  ingressPath: "/"  # Valid values are "/" (default) or "/registry"
  resources:
    limits:
      cpu: 250m
      memory: 512Mi
  tolerations: # '[{"key": "node-role.kubernetes.io/jarvice-registry", "effect": "NoSchedule", "operator": "Exists"}]'
  nodeSelector: # '{"node-role.kubernetes.io/jarvice-registry": ""}'
  networkPolicy:
    enabled: # Inherits from jarvice.networkPolicy.enabled if unset
  image: registry:2
  persistence:
    enabled: false
    # Set to "keep" to prevent removal or jarvice-registry-pvc on helm delete
    resourcePolicy: ""  # "keep"
    # Use empty existingClaimName for dynamic provisioning via storageClass
    existingClaimName: # "jarvice-registry-pvc"
    # storageClass: "-"
    storageClass: "jarvice-registry"
    accessMode: ReadWriteOnce
    size: 10Gi
  env:
    REGISTRY_HTTP_ADDR: 0.0.0.0:443
  tls:
    # jarvice.tls will be used from above unless secretName is set
    secretName: # jarvice-registry-tls
    crt: # If secretName is set, set this to base64 encoded cert
    key: # If secretName is set, set this to base64 encoded key

jarvice_dal:
  enabled: true
  replicaCount: 2
  # PodDisruptionBudget default requires 25% minimum of pods must be running
  pdb:
    minAvailable: "25%"
  # antiAffinity default of "soft" prefers that pods run on diff nodes.
  # Set to "hard" to require pods to run on diff nodes.
  antiAffinity: "soft"
  resources:
    limits:
      cpu: 1
      memory: 16Gi
  hostNetwork: false
  tolerations: # '[{"key": "node-role.kubernetes.io/jarvice-dal", "effect": "NoSchedule", "operator": "Exists"}]'
  nodeSelector: # '{"node-role.kubernetes.io/jarvice-dal": ""}'
  networkPolicy:
    enabled: # Inherits from jarvice.networkPolicy.enabled if unset
  # jarvice.settings.configMap takes precedence over environment settings
  # for JARVICE_CFG_NETWORK
  # JARVICE_SITE_DBHOST inherits from jarvice.JARVICE_DBHOST if unset
  # JARVICE_SITE_DBPASSWD inherits from jarvice.JARVICE_DBPASSWD if unset
  # JARVICE_SITE_DBUSER inherits from jarvice.JARVICE_DBUSER if unset
  env:
    JARVICE_SITE_DBHOST: # jarvice-db
    JARVICE_SITE_DBUSER: # root
    JARVICE_SITE_DBPASSWD: # Pass1234
    JARVICE_ROOT_USER_CREATE: False
    JARVICE_ROOT_USER_PASSWD: Pass1234
    JARVICE_ROOT_USER_EMAIL: root@localhost
    JARVICE_USER_REGISTRY_VERIFY: False
    JARVICE_ROOT_USER_VAULT: # default-BLOCK-1GB
    JARVICE_ROOT_USER_VAULT_SIZE: # 1
    JARVICE_MACHINES_ADD: '[{"mc_name":"n0", "mc_description":"2 core, 16GB RAM (CPU only)", "mc_cores":"2", "mc_slots":"2", "mc_gpus":"0", "mc_ram":"16", "mc_swap":"8", "mc_scratch":"64", "mc_devices":"", "mc_properties":"", "mc_slave_properties":"", "mc_slave_gpus":"0", "mc_slave_ram":"16", "mc_scale_min":"1", "mc_scale_max":"1", "mc_scale_select":"", "mc_lesser":"1", "mc_price":"0.00", "mc_priority":"0", "mc_privs":"", "mc_arch":"x86_64"}, {"mc_name":"n1", "mc_description":"4 core, 32GB RAM (CPU Only)", "mc_cores":"4", "mc_slots":"4", "mc_gpus":"0", "mc_ram":"32", "mc_swap":"16", "mc_scratch":"100", "mc_devices":"", "mc_properties":"", "mc_slave_properties":"", "mc_slave_gpus":"0", "mc_slave_ram":"32", "mc_scale_min":"1", "mc_scale_max":"1", "mc_scale_select":"", "mc_lesser":"1", "mc_price":"0.00", "mc_priority":"0", "mc_privs":"", "mc_arch":"x86_64"}, {"mc_name":"n3", "mc_description":"16 core, 128GB RAM (CPU Only)", "mc_cores":"16", "mc_slots":"16", "mc_gpus":"0", "mc_ram":"128", "mc_swap":"64", "mc_scratch":"500", "mc_devices":"", "mc_properties":"", "mc_slave_properties":"", "mc_slave_gpus":"0", "mc_slave_ram":"128", "mc_scale_min":"1", "mc_scale_max":"256", "mc_scale_select":"", "mc_lesser":"1", "mc_price":"0.00", "mc_priority":"0", "mc_privs":"", "mc_arch":"x86_64"}]'
    JARVICE_CFG_NETWORK: |
        [global]
        netmask: 255.255.0.0
        gateway: 172.17.0.1
        dns: 8.8.8.8,8.8.4.4
        search: localdomain,dev.nimbix.net,nimbix.net
        linuxbr: docker0
        naelimit: 0
        nae_nfs_bind: 172.17.0.0/16
        [floating]
        start: 172.17.0.100
        end: 172.17.0.255
        [nat]
        [static]
        [fqdns]
        [naelimits]
    JARVICE_NODE_ENV: production

jarvice_scheduler:
  enabled: true
  replicaCount: 1
  # PodDisruptionBudget default requires 25% minimum of pods must be running
  pdb:
    minAvailable: "25%"
  # antiAffinity default of "soft" prefers that pods run on diff nodes.
  # Set to "hard" to require pods to run on diff nodes.
  antiAffinity: "soft"
  resources:
    limits:
      cpu: 1
      memory: 2Gi
  tolerations: # '[{"key": "node-role.kubernetes.io/jarvice-scheduler", "effect": "NoSchedule", "operator": "Exists"}]'
  nodeSelector: # '{"node-role.kubernetes.io/jarvice-scheduler": ""}'
  networkPolicy:
    enabled: # Inherits from jarvice.networkPolicy.enabled if unset
  # jarvice.settings.configMap takes precedence over environnment settings
  # for JARVICE_MAIL_CONF
  env:
    JARVICE_SCHED_PASS_INTERVAL: 5
    JARVICE_MAIL_CONF: #|
        #[mail]
        #from: JARVICE Job Status <DoNotReply@localhost>
        #;admins: root@localhost
        #[smtp]
        #server: jarvice-smtpd:25
        #;username: DoNotReply@localhost
        #;password: Pass1234
    JARVICE_UNFS_REQUEST_MEM: 1Gi
    JARVICE_UNFS_REQUEST_CPU: 1
    JARVICE_UNFS_EXPIRE_SECS: 90
    JARVICE_UNFS_NODE_SELECTOR: # '{"node-role.kubernetes.io/jarvice-storage": ""}'

jarvice_k8s_scheduler:
  enabled: true
  replicaCount: 1
  # PodDisruptionBudget default requires 25% minimum of pods must be running
  pdb:
    minAvailable: "25%"
  # antiAffinity default of "soft" prefers that pods run on diff nodes.
  # Set to "hard" to require pods to run on diff nodes.
  antiAffinity: "soft"
  resources:
    limits:
      cpu: 1
      memory: 2Gi
  tolerations: # '[{"key": "node-role.kubernetes.io/jarvice-k8s-scheduler", "effect": "NoSchedule", "operator": "Exists"}]'
  nodeSelector: # '{"node-role.kubernetes.io/jarvice-k8s-scheduler": ""}'
  networkPolicy:
    enabled: # Inherits from jarvice.networkPolicy.enabled if unset

jarvice_pod_scheduler:
  enabled: true
  resources:
    limits:
      cpu: 1
      memory: 1Gi
  tolerations: # '[{"key": "node-role.kubernetes.io/jarvice-pod-scheduler", "effect": "NoSchedule", "operator": "Exists"}]'
  nodeSelector: # '{"node-role.kubernetes.io/jarvice-pod-scheduler": ""}'
  env:
    JARVICE_POD_SCHED_NAME:  # auto-set, should not need to be updated

jarvice_api:
  enabled: true
  replicaCount: 2
  # PodDisruptionBudget default requires 25% minimum of pods must be running
  pdb:
    minAvailable: "25%"
  # antiAffinity default of "soft" prefers that pods run on diff nodes.
  # Set to "hard" to require pods to run on diff nodes.
  antiAffinity: "soft"
  loadBalancerIP:
  ingressHost: # jarvice-api.my-domain.com
  ingressPath: "/"  # Valid values are "/" (default) or "/api"
  resources:
    limits:
      cpu: 250m
      memory: 512Mi
  tolerations: # '[{"key": "node-role.kubernetes.io/jarvice-api", "effect": "NoSchedule", "operator": "Exists"}]'
  nodeSelector: # '{"node-role.kubernetes.io/jarvice-api": ""}'
  networkPolicy:
    enabled: # Inherits from jarvice.networkPolicy.enabled if unset
  env:
    JARVICE_MAIL_CONF: #|
        #[mail]
        #from: JARVICE Job Status <DoNotReply@localhost>
        #;admins: root@localhost
        #[smtp]
        #server: jarvice-smtpd:25
        #;username: DoNotReply@localhost
        #;password: Pass1234

jarvice_dockerbuild:
  tolerations: # '[{"key": "node-role.kubernetes.io/jarvice-dockerbuildpull", "effect": "NoSchedule", "operator": "Exists"}, {"key": "node-role.kubernetes.io/jarvice-dockerbuild", "effect": "NoSchedule", "operator": "Exists"}]'
  nodeSelector: # '{"node-role.kubernetes.io/jarvice-dockerbuildpull": ""}'  # '{"node-role.kubernetes.io/jarvice-dockerbuild": ""}'

jarvice_dockerpull:
  tolerations: # '[{"key": "node-role.kubernetes.io/jarvice-dockerbuildpull", "effect": "NoSchedule", "operator": "Exists"}, {"key": "node-role.kubernetes.io/jarvice-dockerpull", "effect": "NoSchedule", "operator": "Exists"}]'
  nodeSelector: # '{"node-role.kubernetes.io/jarvice-dockerbuildpull": ""}'  # '{"node-role.kubernetes.io/jarvice-dockerpull": ""}'

jarvice_appsync:
  enabled: true
  replicaCount: 1
  resources:
    limits:
      cpu: 250m
      memory: 512Mi
  tolerations: # '[{"key": "node-role.kubernetes.io/jarvice-appsync", "effect": "NoSchedule", "operator": "Exists"}]'
  nodeSelector: # '{"node-role.kubernetes.io/jarvice-appsync": ""}'
  # If JARVICE_SYSTEM_REGISTRY and/or JARVICE_SYSTEM_REPO_BASE are not set in
  # jarvice_appsync.env, they will be set via the global jarvice stanza above.
  env:
    JARVICE_SYSTEM_REGISTRY: # gcr.io
    JARVICE_SYSTEM_REPO_BASE: jarvice-apps
    JARVICE_APPSYNC_INTERVAL: 3600
  livenessProbe:
    periodSeconds: 900

jarvice_mc_portal:
  enabled: true
  replicaCount: 2
  # PodDisruptionBudget default requires 25% minimum of pods must be running
  pdb:
    minAvailable: "25%"
  # antiAffinity default of "soft" prefers that pods run on diff nodes.
  # Set to "hard" to require pods to run on diff nodes.
  antiAffinity: "soft"
  loadBalancerIP:
  ingressHost: # jarvice.my-domain.com
  ingressPath: "/"  # Valid values are "/" (default) or "/portal"
  resources:
    limits:
      cpu: 250m
      memory: 2Gi
  tolerations: # '[{"key": "node-role.kubernetes.io/jarvice-mc-portal", "effect": "NoSchedule", "operator": "Exists"}]'
  nodeSelector: # '{"node-role.kubernetes.io/jarvice-mc-portal": ""}'
  networkPolicy:
    enabled: # Inherits from jarvice.networkPolicy.enabled if unset
  # JARVICE_PORTAL_DBHOST inherits from jarvice.JARVICE_DBHOST if unset
  # JARVICE_PORTAL_DBPASSWD inherits from jarvice.JARVICE_DBPASSWD if unset
  # JARVICE_PORTAL_DBUSER inherits from jarvice.JARVICE_DBUSER if unset
  # JARVICE_PORTAL_WEB_HOST inherits from jarvice_mc_portal.ingressHost/jarvice_mc_portal.ingressPath if unset
  env:
    JARVICE_USER_DEFAULT_ENABLED: True
    JARVICE_USER_DEFAULT_DEVELOPER: True
    JARVICE_PORTAL_WEB_HOST: # https://<jarvice_mc_portal.ingressHost><jarvice_mc_portal.ingressPath>
    # If null, JARVICE_PORTAL_MEMCACHED_LOCATIONS is auto-generated based on
    # jarvice_memcached.enabled/jarvice_memcached.replicaCount
    JARVICE_PORTAL_MEMCACHED_LOCATIONS: # jarvice-memcached-0.jarvice-memcached:11211,jarvice-memcached-1.jarvice-memcached:11211,jarvice-memcached-2.jarvice-memcached:11211
    JARVICE_PORTAL_APP_OWNERS:
    JARVICE_PORTAL_MAIL_FROM: "JARVICE Account Status <DoNotReply@localhost>"
    JARVICE_PORTAL_MAIL_SUBJECT: "Your JARVICE Account"
    JARVICE_PORTAL_MAIL_SERVER: jarvice-smtpd:25
    JARVICE_PORTAL_MAIL_USERNAME:
    JARVICE_PORTAL_MAIL_PASSWORD:
    JARVICE_PORTAL_MAIL_ADMINS:
    JARVICE_PORTAL_DB: nimbix_portal_ng
    JARVICE_PORTAL_DBHOST: # jarvice-db
    JARVICE_PORTAL_DBUSER: # root
    JARVICE_PORTAL_DBPASSWD: # Pass1234

jarvice_api_experimental:
  enabled: false
  loadBalancerIP:
  ingressHost: # jarvice-api.my-domain.com
  ingressPath: "/"  # Valid values are "/" (default) or "/api"

