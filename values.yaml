jarvice:
  imagePullSecret:
    username:
    password:
  JARVICE_LICENSE_LIC:

  # JARVICE_REMOTE_* settings are used for application synchronization
  JARVICE_REMOTE_API_URL: https://api.jarvice.com
  JARVICE_REMOTE_USER:
  JARVICE_REMOTE_APIKEY:
  JARVICE_APPSYNC_USERONLY: false

  JARVICE_LOCAL_REGISTRY: # jarvice-registry:443
  JARVICE_LOCAL_REPO_BASE: jarvice

  JARVICE_SYSTEM_REGISTRY: quay.io
  JARVICE_SYSTEM_REPO_BASE: nimbix
  JARVICE_IMAGES_TAG: jarvice-master
  JARVICE_IMAGES_VERSION: # auto-set (ignored) if installing from chart repo
  JARVICE_SYSTEM_ARCH: amd64

  JARVICE_JOBS_DOMAIN:
  JARVICE_JOBS_LB_SERVICE: false

  # jarvice.tolerations applies to all of the jarvice_* components below.
  # This can be overridden by updating tolerations in each jarvice_* stanza.
  tolerations: '[{"key": "node-role.kubernetes.io/jarvice-system", "effect": "NoSchedule", "operator": "Exists"}]'
  #nodeSelector: # '{"node-role.kubernetes.io/jarvice-system": ""}'
  nodeSelector: '{"beta.kubernetes.io/arch": "amd64"}'

  # JARVICE_DBHOST and JARVICE_DBUSER only need to change if using a database
  # not provided by this helm chart
  JARVICE_DBHOST: jarvice-db
  JARVICE_DBUSER: root
  JARVICE_DBPASSWD: Pass1234

  JARVICE_POD_SCHED_LOGLEVEL: 30

  # JARVICE_MAIL_CONF can be overridden with jarvice_api.env.JARVICE_MAIL_CONF
  # and jarvice_scheduler.env.JARVICE_MAIL_CONF
  JARVICE_MAIL_CONF: |
      [mail]
      from: JARVICE Job Status <DoNotReply@localhost>
      admins: root@localhost
      [smtp]
      server: localhost:25
      ;username: DoNotReply@localhost
      ;password: Pass1234

  # Review the following for more information on "skinning" JARVICE with
  # the optional jarvice.settings.configMap:
  # https://github.com/nimbix/jarvice-helm#customize-jarvice-files-via-a-configmap
  settings:
    configMap: jarvice-settings

  # jarvice-tls secret will be created from tls.crt and tls.key
  # tls.crt and tls.key are base64 encoded:
  # e.g. echo -n "$tls_crt" | base64 -w 0
  tls:
    crt: LS0tLS1CRUdJTiBDRVJUSUZJQ0FURS0tLS0tCk1JSURwVENDQW8yZ0F3SUJBZ0lKQUwyNDNJLzZNaEFQTUEwR0NTcUdTSWIzRFFFQkN3VUFNR2t4Q3pBSkJnTlYKQkFZVEFsVlRNUTR3REFZRFZRUUlEQVZVWlhoaGN6RVBNQTBHQTFVRUJ3d0dSR0ZzYkdGek1ROHdEUVlEVlFRSwpEQVpPYVcxaWFYZ3hEekFOQmdOVkJBc01CbEJQVWxSQlRERVhNQlVHQTFVRUF3d09Ta0ZTVmtsRFJTMVFUMUpVClFVd3dIaGNOTVRjd016SXlNRFl4TmpVNFdoY05NVGN3TkRJeE1EWXhOalU0V2pCcE1Rc3dDUVlEVlFRR0V3SlYKVXpFT01Bd0dBMVVFQ0F3RlZHVjRZWE14RHpBTkJnTlZCQWNNQmtSaGJHeGhjekVQTUEwR0ExVUVDZ3dHVG1sdApZbWw0TVE4d0RRWURWUVFMREFaUVQxSlVRVXd4RnpBVkJnTlZCQU1NRGtwQlVsWkpRMFV0VUU5U1ZFRk1NSUlCCklqQU5CZ2txaGtpRzl3MEJBUUVGQUFPQ0FROEFNSUlCQ2dLQ0FRRUF3b2RTTHlpSTZ1RFlZYnZuNHBuUkZjU0kKZ2hwUTUzZXpUZXEyM3FMNWY0ZGhUWk9nUjlHdmNlZnVLMXZ3RnhQYjNiWVB2bjhtODVQZzR2UjM1MzNGM3RLVgpFUkRQYTd5aWRGZWZ1RnVTRm0yUEtlWkoxelRXUm5Ed3VMS0p1cXRQdDlPa1ltdmNBK1NveHhQd0VBa0hHTURRCmxhSEtzU2dGYS9raG1OWi9PUFZZSllHSjlFK25KanNwb0hkR2F1RWFvUnczbVhQWUwrbjVhbTVMQmpFYUhqUnYKSjY2UzRUS0UwbTZrQWh1MXV2WkRKRjVDSXdKSVpRM3lvOWNaYVAxZVRWYUMzcjl5L3V5aWhURHRWVXJaTUpHNwpjVWkyNkhvNGNLYVJVeDg3RU9scnJzK0cvNVJJT3grS3BvaXpuYVFxYzdoTlhmOHJKSDdjcXZvVWJlVUxnd0lECkFRQUJvMUF3VGpBZEJnTlZIUTRFRmdRVVh4bkZRTW1hZFBTTWEwb2FSK0p5NnF0NUxaZ3dId1lEVlIwakJCZ3cKRm9BVVh4bkZRTW1hZFBTTWEwb2FSK0p5NnF0NUxaZ3dEQVlEVlIwVEJBVXdBd0VCL3pBTkJna3Foa2lHOXcwQgpBUXNGQUFPQ0FRRUFvSUNZWHBUVUd0cGlaVy9WeWhJejVuaHp2ei90dHF3WENtSi9hZkc3bU96anZWRzQ1dmIrCm93Q0tNOGlOU3VhZDh1eWdtYnovSG5ZT3ErVzVCSmxZQS8wRnZyeDRPWGl3eVYxSWhxRXJnMVBqRWJxVFJIby8KOUlCSzkxbmc2MkRxSkJyajhORnZVcWJvZmhUY0hvN3BTVktabGt1VUIrY3VWVVBINkhSSHFidHUvR1lBbnlVRwp4R1krSmsvNHZXekppbDIrRENUMkpHOHhLcGxsd2hOcGdXYWhaVDhwQVZCTWE3OXpYUU1qOEpzZFc3VDFZV3BnClpFVTRuNkVoa2FPakVOZDhhSFZMbXpDVTdaMXptY1BSTDYvNEUydFBLVklFaGttZDh4M2h0ZU43N3BTM1pIZFoKMStGNGZ1V2t3UXcwdkpBSTlNdnhiT242STNkOGVuMW5KQT09Ci0tLS0tRU5EIENFUlRJRklDQVRFLS0tLS0K
    key: LS0tLS1CRUdJTiBQUklWQVRFIEtFWS0tLS0tCk1JSUV2UUlCQURBTkJna3Foa2lHOXcwQkFRRUZBQVNDQktjd2dnU2pBZ0VBQW9JQkFRRENoMUl2S0lqcTROaGgKdStmaW1kRVZ4SWlDR2xEbmQ3Tk42cmJlb3ZsL2gyRk5rNkJIMGE5eDUrNHJXL0FYRTl2ZHRnKytmeWJ6aytEaQo5SGZuZmNYZTBwVVJFTTlydktKMFY1KzRXNUlXYlk4cDVrblhOTlpHY1BDNHNvbTZxMCszMDZSaWE5d0Q1S2pICkUvQVFDUWNZd05DVm9jcXhLQVZyK1NHWTFuODQ5VmdsZ1luMFQ2Y21PeW1nZDBacTRScWhIRGVaYzlndjZmbHEKYmtzR01Sb2VORzhucnBMaE1vVFNicVFDRzdXNjlrTWtYa0lqQWtobERmS2oxeGxvL1Y1TlZvTGV2M0wrN0tLRgpNTzFWU3Rrd2tidHhTTGJvZWpod3BwRlRIenNRNld1dXo0Yi9sRWc3SDRxbWlMT2RwQ3B6dUUxZC95c2tmdHlxCitoUnQ1UXVEQWdNQkFBRUNnZ0VBRXJiMEdDZGRMTU9lN2FBblNleWthZVN6Z1ZqSXljd0JTeEMyc1NxYXVFTXQKQUVxZ2srZy9hY1QzYStKM2NiRHVhU0VYMktyZzgzUVpvWndGWVJiL2oxVlJGQWc2L0ZGMGk1N1dkZVVSWStqOAphZnFHeGhhR090YW93Z3dqSmZ0UE93ODRkR09PRWkzUWN2NmZETnZoZStjbzZneGJ0TGwxOUJKT3dpWjRyT0Q2CmpGUm5jU3ZZeHJSNSs2YXFoVjRJT0ZneGhZd1hGZWhsZjBrVTNPcU02Y0l2VERJOG5ocXJaYWR0eXFMM2VpV3gKMlVzR0JHTlJkWHlkVVJjWE1NbTlqVWhGOFNrVFNpWGxjbEdEK0lmNXBFUDErQ3FoRC9QbjNNbUlIeTRoQkFjUwpHbC81K2RCOW9xeWJyU1BmSnBTUjdHYSt5cTdyUWwvOENWR3JIcUFjK1FLQmdRRDFrbmNiV0pVc3ZVK0IvV0JkCnRMYkVwYjNqazBxQ3JIMVVRS3FacHVuYUMrcEFKZTEveS9XekZueHF6MUVxUmRNMW1WUVBNU2dnWmt2RWRnSS8KNmU0Uno5VEFrS2NNanhpdUpaRTA5eHlhSjJiNEpSdzdPTVhnYXYvWFN5OE9kQkxmQkZEeFVGZmRDaWJZN2JwegorcG5acWZQSklLUHNoTmhYV1RDY21HM2lkUUtCZ1FES3lmcG5QR0d1cEtNSGZxN2d3SW1HZktGekxVY1I4MWl4ClcxdUFGS0kvY3lueFcwTHQ5VS9zUEE0RXArWXd5WUNhQjJrOHdQNVc1akRmRG0zVVEzVXlvQnVESm5ka1pjcWgKNXBhOE9TYzNCdjJhWjh6Rjl6VUZjdHRGTUNwUE15VlFPeWlkVTRsQzZCN09VUUMvSEduQWh5YnQvZ2NvcFVqTApCYURZKy9LSEZ3S0JnRmM5U3hicDUwVFhsQkZINUI0bC91L3BPWVpKWXlUOUJpRVNRQWtKNVBYVFdjcWtMclZCCnplMXJSWlBrUnA5UDR2S2RuK0V0dzJXUE1jZC9iTmtyejZtQVBjS1RJT1V6U0w5RkZVck5wdG1VdWQzWndTZkEKeVhzcVIrMUNCbHVLSE5JaGhHZlY5UURQaEhGNE1zN1U3aWNIVzFYT1JLM1htOHVjSWNyZjA5bXBBb0dCQUpoSApOYWJpTzhRR1Uzb2tValBwd1J2aGFPZHhmNlhtSTVzRExHR3duT21pbEVOdXNZSzVMS3dMcU1jc1FYb3ZSa2ZqCitzMnBheFJjUlNTcTFDU0tCMjdkdGVzMUxvQ1F3Nm54MncwNnFjenpqZXF0dWFLSzhTREhVQXJUa1dIcDJVSTMKT2xkeHpHZ1dvRk56bG1qc2NDa29GRDZ3L0RVMGNNWXIwczQ5MjdBL0FvR0FBYjE2U05FUEZCbVh6QXhmUTFkZApZdGtqRHFoanIwclBCUG1Qalhkek56TkZyaFBPZUdrdEE3aXloZWM1Mndxdlh6TVZBQzZDVjBwN1hHZGlOdUk3CnN6ckZ4UHBPYmwzb3l6YWVUNy92V0tzTG9KSzF3TGJ6SlNET1dwU29MYmlMVWh1SkZ4bG5zZ08zMVNjcE9YTE4KUDZtZ08wemlVeG5XcVdDY1BDN3k4NU09Ci0tLS0tRU5EIFBSSVZBVEUgS0VZLS0tLS0K

  JARVICE_SYSTEM_NAMESPACE: # auto-detected, should not need to be updated
  JARVICE_JOBS_NAMESPACE: # auto-set, should not need to be updated
  JARVICE_BUILDS_NAMESPACE: # auto-set, should not need to be updated
  JARVICE_PULLS_NAMESPACE: # auto-set, should not need to be updated


# Database server previously set up?  Set enabled to false.
jarvice_db:
  enabled: true
  replicaCount: 1
  resources:
    limits:
      cpu: 250m
      memory: 512Mi
  tolerations: # '[{"key": "node-role.kubernetes.io/jarvice-db", "effect": "NoSchedule", "operator": "Exists"}]'
  nodeSelector: # '{"node-role.kubernetes.io/jarvice-db": ""}'
  image: mysql:5.6.41
  persistence:
    enabled: false
    # storageClass: "-"
    storageClass: "jarvice-db"
    accessMode: ReadWriteOnce
    size: 8Gi
  # MYSQL_ROOT_PASSWORD inherits from jarvice.JARVICE_DBPASSWD if unset
  # MYSQL_USER only inherits from jarvice.JARVICE_DBUSER if
  #     jarvice.JARVICE_DBUSER != 'root'
  # MYSQL_PASSWORD is only used if MYSQL_USER is set or
  #     jarvice.JARVICE_DBUSER != 'root'
  # MYSQL_PASSWORD inherits from jarvice.JARVICE_DBPASSWD if unset
  env:
    MYSQL_ROOT_PASSWORD: # Pass1234
    MYSQL_USER: # nimbix # optional, additional superuser
    MYSQL_PASSWORD: # Pass1234

# Memcached server previously set up?  Set jarvice_memcached.enabled to false.
# Then, set JARVICE_PORTAL_MEMCACHED_LOCATIONS below in jarvice_mc_portal env.
jarvice_memcached:
  enabled: true
  replicaCount: 3
  # PodDisruptionBudget default requires 2 minimum pods must be running
  pdb:
    minAvailable: 2
  # antiAffinity default of "soft" prefers that pods run on diff nodes.
  # Set to "hard" to require pods to run on diff nodes.
  antiAffinity: "soft"
  resources:
    limits:
      cpu: 250m
      memory: 512Mi
  tolerations: # '[{"key": "node-role.kubernetes.io/jarvice-memcached", "effect": "NoSchedule", "operator": "Exists"}]'
  nodeSelector: # '{"node-role.kubernetes.io/jarvice-memcached": ""}'
  image: memcached:1.5
  maxItemMemory: 64
  verbosity: v
  extendedOptions: modern

# Want to run the docker registry in JARVICE namespace?  Set enabled to true.
# Then set JARVICE_LOCAL_REGISTRY to jarvice-registry:443 as seen above
# in the jarvice: stanza.  Use ingressHost or set loadBalancerIP as desired.
jarvice_registry:
  enabled: false
  replicaCount: 1
  loadBalancerIP:
  ingressHost: # jarvice-registry.my-domain.com
  resources:
    limits:
      cpu: 250m
      memory: 512Mi
  tolerations: # '[{"key": "node-role.kubernetes.io/jarvice-registry", "effect": "NoSchedule", "operator": "Exists"}]'
  nodeSelector: # '{"node-role.kubernetes.io/jarvice-registry": ""}'
  image: registry:2
  persistence:
    enabled: false
    # storageClass: "-"
    storageClass: "jarvice-registry"
    accessMode: ReadWriteOnce
    size: 10Gi
  env:
    REGISTRY_HTTP_ADDR: 0.0.0.0:443
  tls:
    # jarvice.tls will be used from above unless secretName is set
    secretName: # jarvice-registry-tls
    crt: # If secretName is set, set this to base64 encoded cert
    key: # If secretName is set, set this to base64 encoded key

jarvice_dal:
  enabled: true
  replicaCount: 2
  # PodDisruptionBudget default requires 25% minimum of pods must be running
  pdb:
    minAvailable: "25%"
  # antiAffinity default of "soft" prefers that pods run on diff nodes.
  # Set to "hard" to require pods to run on diff nodes.
  antiAffinity: "soft"
  resources:
    limits:
      cpu: 1
      memory: 16Gi
  hostNetwork: false
  tolerations: # '[{"key": "node-role.kubernetes.io/jarvice-dal", "effect": "NoSchedule", "operator": "Exists"}]'
  nodeSelector: # '{"node-role.kubernetes.io/jarvice-dal": ""}'
  # jarvice.settings.configMap takes precedence over environment settings
  # for JARVICE_CFG_NETWORK
  # JARVICE_SITE_DBHOST inherits from jarvice.JARVICE_DBHOST if unset
  # JARVICE_SITE_DBPASSWD inherits from jarvice.JARVICE_DBPASSWD if unset
  # JARVICE_SITE_DBUSER inherits from jarvice.JARVICE_DBUSER if unset
  env:
    JARVICE_SITE_DBHOST: # jarvice-db
    JARVICE_SITE_DBUSER: # root
    JARVICE_SITE_DBPASSWD: # Pass1234
    JARVICE_ROOT_USER_CREATE: False
    JARVICE_ROOT_USER_PASSWD: Pass1234
    JARVICE_ROOT_USER_EMAIL: root@localhost
    JARVICE_USER_REGISTRY_VERIFY: False
    JARVICE_ROOT_USER_VAULT: # default-BLOCK-1GB
    JARVICE_ROOT_USER_VAULT_SIZE: # 1
    JARVICE_MACHINES_ADD: '[{"mc_name":"n0", "mc_description":"2 core, 16GB RAM (CPU only)", "mc_cores":"2", "mc_slots":"16", "mc_gpus":"0", "mc_ram":"16", "mc_swap":"8", "mc_scratch":"64", "mc_devices":"", "mc_properties":"", "mc_slave_properties":"", "mc_slave_gpus":"0", "mc_slave_ram":"16", "mc_scale_min":"1", "mc_scale_max":"1", "mc_scale_select":"", "mc_lesser":"1", "mc_price":"0.00", "mc_priority":"0", "mc_privs":"", "mc_arch":"x86_64"}, {"mc_name":"n1", "mc_description":"4 core, 32GB RAM (CPU Only)", "mc_cores":"4", "mc_slots":"16", "mc_gpus":"0", "mc_ram":"32", "mc_swap":"16", "mc_scratch":"100", "mc_devices":"", "mc_properties":"", "mc_slave_properties":"", "mc_slave_gpus":"0", "mc_slave_ram":"32", "mc_scale_min":"1", "mc_scale_max":"1", "mc_scale_select":"", "mc_lesser":"1", "mc_price":"0.00", "mc_priority":"0", "mc_privs":"", "mc_arch":"x86_64"}, {"mc_name":"n3", "mc_description":"16 core, 128GB RAM (CPU Only)", "mc_cores":"16", "mc_slots":"16", "mc_gpus":"0", "mc_ram":"128", "mc_swap":"64", "mc_scratch":"500", "mc_devices":"", "mc_properties":"", "mc_slave_properties":"", "mc_slave_gpus":"0", "mc_slave_ram":"128", "mc_scale_min":"1", "mc_scale_max":"256", "mc_scale_select":"", "mc_lesser":"1", "mc_price":"0.00", "mc_priority":"0", "mc_privs":"", "mc_arch":"x86_64"}]'
    JARVICE_CFG_NETWORK: |
        [global]
        netmask: 255.255.0.0
        gateway: 172.17.0.1
        dns: 8.8.8.8,8.8.4.4
        search: localdomain,dev.nimbix.net,nimbix.net
        linuxbr: docker0
        naelimit: 10
        nae_nfs_bind: 172.17.0.0/16
        [floating]
        start: 172.17.0.100
        end: 172.17.0.255
        [nat]
        [static]
        [fqdns]
        [naelimits]
    JARVICE_NODE_ENV: production

jarvice_scheduler:
  enabled: true
  replicaCount: 1
  # PodDisruptionBudget default requires 25% minimum of pods must be running
  pdb:
    minAvailable: "25%"
  # antiAffinity default of "soft" prefers that pods run on diff nodes.
  # Set to "hard" to require pods to run on diff nodes.
  antiAffinity: "soft"
  resources:
    limits:
      cpu: 1
      memory: 4Gi
  tolerations: # '[{"key": "node-role.kubernetes.io/jarvice-scheduler", "effect": "NoSchedule", "operator": "Exists"}]'
  nodeSelector: # '{"node-role.kubernetes.io/jarvice-scheduler": ""}'
  # jarvice.settings.configMap takes precedence over environnment settings
  # for JARVICE_MAIL_CONF
  env:
    JARVICE_USE_LXCFS: yes
    JARVICE_SCHED_PASS_INTERVAL: 5
    JARVICE_MAIL_CONF: #|
        #[mail]
        #from: JARVICE Job Status <DoNotReply@localhost>
        #admins: root@localhost
        #[smtp]
        #server: localhost:25
        #;username: DoNotReply@localhost
        #;password: Pass1234

jarvice_pod_scheduler:
  enabled: true
  resources:
    limits:
      cpu: 1
      memory: 2Gi
  tolerations: # '[{"key": "node-role.kubernetes.io/jarvice-pod-scheduler", "effect": "NoSchedule", "operator": "Exists"}]'
  nodeSelector: # '{"node-role.kubernetes.io/jarvice-pod-scheduler": ""}'
  env:
    JARVICE_POD_SCHED_NAME:  # auto-set, should not need to be updated

jarvice_api:
  enabled: true
  replicaCount: 2
  # PodDisruptionBudget default requires 25% minimum of pods must be running
  pdb:
    minAvailable: "25%"
  # antiAffinity default of "soft" prefers that pods run on diff nodes.
  # Set to "hard" to require pods to run on diff nodes.
  antiAffinity: "soft"
  loadBalancerIP:
  ingressHost: # jarvice-api.my-domain.com
  resources:
    limits:
      cpu: 250m
      memory: 512Mi
  tolerations: # '[{"key": "node-role.kubernetes.io/jarvice-api", "effect": "NoSchedule", "operator": "Exists"}]'
  nodeSelector: # '{"node-role.kubernetes.io/jarvice-api": ""}'
  env:
    JARVICE_MAIL_CONF: #|
        #[mail]
        #from: JARVICE Job Status <DoNotReply@localhost>
        #admins: root@localhost
        #[smtp]
        #server: localhost:25
        #;username: DoNotReply@localhost
        #;password: Pass1234

jarvice_dockerbuild:
  tolerations: # '[{"key": "node-role.kubernetes.io/jarvice-dockerbuild", "effect": "NoSchedule", "operator": "Exists"}]'
  nodeSelector: # '{"node-role.kubernetes.io/jarvice-dockerbuild": ""}'

jarvice_dockerpull:
  tolerations: # '[{"key": "node-role.kubernetes.io/jarvice-dockerpull", "effect": "NoSchedule", "operator": "Exists"}]'
  nodeSelector: # '{"node-role.kubernetes.io/jarvice-dockerpull": ""}'

jarvice_appsync:
  enabled: true
  replicaCount: 1
  resources:
    limits:
      cpu: 250m
      memory: 512Mi
  tolerations: # '[{"key": "node-role.kubernetes.io/jarvice-appsync", "effect": "NoSchedule", "operator": "Exists"}]'
  nodeSelector: # '{"node-role.kubernetes.io/jarvice-appsync": ""}'
  # If JARVICE_SYSTEM_REGISTRY and/or JARVICE_SYSTEM_REPO_BASE are not set in
  # jarvice_appsync.env, they will be set via the global jarvice stanza above.
  env:
    JARVICE_SYSTEM_REGISTRY: # quay.io
    JARVICE_SYSTEM_REPO_BASE: # nimbix
    JARVICE_APPSYNC_INTERVAL: 3600
  livenessProbe:
    periodSeconds: 900

jarvice_mc_portal:
  enabled: true
  replicaCount: 2
  # PodDisruptionBudget default requires 25% minimum of pods must be running
  pdb:
    minAvailable: "25%"
  # antiAffinity default of "soft" prefers that pods run on diff nodes.
  # Set to "hard" to require pods to run on diff nodes.
  antiAffinity: "soft"
  loadBalancerIP:
  ingressHost: # jarvice.my-domain.com
  resources:
    limits:
      cpu: 250m
      memory: 2Gi
  tolerations: # '[{"key": "node-role.kubernetes.io/jarvice-mc-portal", "effect": "NoSchedule", "operator": "Exists"}]'
  nodeSelector: # '{"node-role.kubernetes.io/jarvice-mc-portal": ""}'
  # JARVICE_PORTAL_DBHOST inherits from jarvice.JARVICE_DBHOST if unset
  # JARVICE_PORTAL_DBPASSWD inherits from jarvice.JARVICE_DBPASSWD if unset
  # JARVICE_PORTAL_DBUSER inherits from jarvice.JARVICE_DBUSER if unset
  env:
    JARVICE_USER_DEFAULT_ENABLED: True
    JARVICE_USER_DEFAULT_DEVELOPER: True
    JARVICE_PORTAL_WEB_HOST: # https://jarvice.localdomain
    # If null, JARVICE_PORTAL_MEMCACHED_LOCATIONS is auto-generated based on
    # jarvice_memcached.enabled/jarvice_memcached.replicaCount
    JARVICE_PORTAL_MEMCACHED_LOCATIONS: # jarvice-memcached-0.jarvice-memcached:11211,jarvice-memcached-1.jarvice-memcached:11211,jarvice-memcached-2.jarvice-memcached:11211
    JARVICE_PORTAL_APP_OWNERS:
    JARVICE_PORTAL_MAIL_FROM: "JARVICE Account Status <DoNotReply@localhost>"
    JARVICE_PORTAL_MAIL_SUBJECT: "Your JARVICE Account"
    JARVICE_PORTAL_MAIL_SERVER: localhost:25
    JARVICE_PORTAL_MAIL_USERNAME:
    JARVICE_PORTAL_MAIL_PASSWORD:
    JARVICE_PORTAL_MAIL_ADMINS:
    JARVICE_PORTAL_DBHOST: # jarvice-db
    JARVICE_PORTAL_DBUSER: # root
    JARVICE_PORTAL_DBPASSWD: # Pass1234

