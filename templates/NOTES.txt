*******************************************************************************
************* It may take a few minutes for JARVICE to fully load *************
*******************************************************************************

* Customize JARVICE files via a ConfigMap

See the following link for more detailed information:
https://github.com/nimbix/jarvice-helm#jarvice-post-installation

Step-by-step customization procedure for the aforementioned JARVICE settings:

Create directories for setting the JARVICE customizations:
$ mkdir -p jarvice-helm/jarvice-settings-override

In jarvice-helm/jarvice-settings-override, it will only be necessary to
create those files which are to be customized.  The defaults found in
jarvice-helm/jarvice-settings may be copied and edited as desired.

Load the new JARVICE settings by creating a ConfigMap:
$ kubectl --namespace {{ .Release.Namespace }} \
    create configmap {{ .Values.jarvice.settings.configMap }} \
    --from-file=jarvice-helm/jarvice-settings-override

Reload jarvice-mc-portal pods (only to apply default.png, favicon.png,
logo.png, palette.json, or eula.txt updates):
$ kubectl --namespace jarvice-system delete pods -l component=jarvice-mc-portal

Reload jarvice-scheduler pods (only to apply mail.conf update):
$ kubectl --namespace jarvice-system delete pods -l component=jarvice-scheduler

Reload jarvice-dal pods (only to apply cfg.network update):
$ kubectl --namespace jarvice-system delete pods -l component=jarvice-dal

-------------------------------------------------------------------------------

* View status of the installed kubernetes objects

To get the status for all of the kubernetes objects created in the
"{{ .Release.Namespace }}" namespace:

$ kubectl --namespace {{ .Release.Namespace }} get all

-------------------------------------------------------------------------------

* Retreive IP addresses for accessing JARVICE

{{- if (not (eq "downstream" .Values.jarvice.JARVICE_CLUSTER_TYPE)) }}
If utilizing LoadBalancer IP addresses instead of an ingress controller for
web portal and API endpoint access, the LoadBalancer IP addresses can be
found with the following commands:

$ PORTAL_IP=$(kubectl --namespace {{ .Release.Namespace }} get services \
    jarvice-mc-portal-lb -o jsonpath='{.status.loadBalancer.ingress[0].ip}')
$ echo "$PORTAL_IP"
$ API_IP=$(kubectl --namespace {{ .Release.Namespace }} get services \
    jarvice-api-lb -o jsonpath='{.status.loadBalancer.ingress[0].ip}')
$ echo "$API_IP"
{{- else }}
If utilizing a LoadBalancer IP address instead of an ingress controller for
downstream cluster access, the LoadBalancer IP address for the scheduler can be
found with the following command:

$ SCHED_IP=$(kubectl --namespace {{ .Release.Namespace }} get services \
    jarvice-k8s-scheduler-lb -o jsonpath='{.status.loadBalancer.ingress[0].ip}')
$ echo "$SCHED_IP"
{{- end }}
{{- if .Values.jarvice_registry.enabled }}

The registry IP address can be found with:

$ REGISTRY_IP=$(kubectl --namespace {{ .Release.Namespace }} get services \
    jarvice-registry-lb -o jsonpath='{.status.loadBalancer.ingress[0].ip}')
{{- end }}
{{- if (not (eq "downstream" .Values.jarvice.JARVICE_CLUSTER_TYPE)) }}

Use https://$PORTAL_IP/ to initialize and/or log into JARVICE.
Use https://$API_IP/jarvice/ as the API endpoint for JARVICE.
{{- else }}
Use https://$SCHED_IP/ in the upstream JARVICE cluster configuration.
{{- end }}

-------------------------------------------------------------------------------

