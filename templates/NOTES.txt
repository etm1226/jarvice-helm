*******************************************************************************
************* It may take a few minutes for JARVICE to fully load *************
*******************************************************************************

* Optionally, customize the JARVICE portal with a new "skin" and/or SSL certificate/key pair

- Copy the jarvice-mc-portal-skin directory to jarvice-mc-portal-skin-override.
- Update the image files and/or JSON settings of the color palette in the
  jarvice-mc-portal-skin-override directory.
- Create a kubernetes ConfigMap from the jarvice-mc-portal-skin-override
  directory.

- Copy the jarvice-mc-portal-ssl directory to jarvice-mc-portal-ssl-override.
- Update the certificate and key files in the jarvice-mc-portal-ssl-override
  directory.
- Create a kubernetes ConfigMap from the jarvice-mc-portal-ssl-override
  directory.

- Update the portal deployment environment to force a rolling update of the
  pods with the new skin and/or SSL certificate and key.

Example step-by-step customization procedure for the JARVICE portal:

Skin configuration:
$ cp -a jarvice-helm/jarvice-mc-portal-skin \
    jarvice-helm/jarvice-mc-portal-skin-override
<update files in jarvice-helm/jarvice-mc-portal-skin-override>
$ kubectl --namespace {{ .Release.Namespace }} \
    create configmap {{ .Values.jarvice_mc_portal.skin.configMap }} \
    --from-file=jarvice-helm/jarvice-mc-portal-skin-override

Certificate configuration:
$ cp -a jarvice-helm/jarvice-mc-portal-ssl \
    jarvice-helm/jarvice-mc-portal-ssl-override
<update files in jarvice-helm/jarvice-mc-portal-ssl-override>
$ kubectl --namespace {{ .Release.Namespace }} \
    create configmap {{ .Values.jarvice_mc_portal.ssl.configMap }} \
    --from-file=jarvice-helm/jarvice-mc-portal-ssl-override

Reload pods:
$ kubectl --namespace {{ .Release.Namespace }} set env \
    deployment/jarvice-mc-portal JARVICE_PODS_RELOAD=$(date +%s)

-------------------------------------------------------------------------------

* View status of the installed kubernetes objects

To get the status for all of the kubernetes objects created in the
"{{ .Release.Namespace }}" namespace:

$ kubectl --namespace {{ .Release.Namespace }} get all

-------------------------------------------------------------------------------

* Retreive IP addresses for accessing JARVICE

The LoadBalancer IP addresses for the MC portal and the API endpoint can be
found with the following commands:

$ PORTAL_IP=$(kubectl --namespace {{ .Release.Namespace }} get services \
    jarvice-mc-portal-lb -o jsonpath='{.status.loadBalancer.ingress[0].ip}')
$ API_IP=$(kubectl --namespace {{ .Release.Namespace }} get services \
    jarvice-api-lb -o jsonpath='{.status.loadBalancer.ingress[0].ip}')
{{- if .Values.jarvice_registry.enabled }}
{{- if .Values.jarvice_registry.external }}

The registry IP address can be found with:

$ REGISTRY_IP=$(kubectl --namespace {{ .Release.Namespace }} get services \
    jarvice-registry-lb -o jsonpath='{.status.loadBalancer.ingress[0].ip}')
{{- end }}
{{- end }}

Then use https://$PORTAL_IP/ to initialize and/or log into JARVICE.

-------------------------------------------------------------------------------

