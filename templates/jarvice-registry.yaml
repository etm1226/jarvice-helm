{{- if .Values.jarvice_registry.enabled }}
{{- if and .Values.jarvice_registry.persistence.enabled (empty .Values.jarvice_registry.persistence.existingClaimName) }}
apiVersion: v1
kind: PersistentVolumeClaim
metadata:
  name: jarvice-registry-pvc
  labels:
    {{- include "jarvice.release_labels" . | indent 4 }}
    component: jarvice-registry
{{- if eq .Values.jarvice_registry.persistence.resourcePolicy "keep" }}
  annotations:
    helm.sh/resource-policy: keep
{{- end }}
spec:
  accessModes:
    - {{ .Values.jarvice_registry.persistence.accessMode }}
  volumeMode: Filesystem
  resources:
    requests:
      storage: {{ .Values.jarvice_registry.persistence.size }}
{{- if .Values.jarvice_registry.persistence.storageClass }}
{{- if (eq "-" .Values.jarvice_registry.persistence.storageClass) }}
  storageClassName: ""
{{- else }}
  storageClassName: "{{ .Values.jarvice_registry.persistence.storageClass }}"
{{- end }}
{{- end }}
---
{{- end }}
apiVersion: apps/v1
kind: Deployment
metadata:
  name: jarvice-registry
  labels:
    {{- include "jarvice.release_labels" . | indent 4 }}
    component: jarvice-registry
    deployment: jarvice-registry
spec:
  replicas: {{ .Values.jarvice_registry.replicaCount }}
  selector:
    matchLabels:
      deployment: jarvice-registry
  template:
    metadata:
      labels:
        {{- include "jarvice.release_labels" . | indent 8 }}
        component: jarvice-registry
        deployment: jarvice-registry
    spec:
{{- if (not (empty .Values.jarvice_registry.tolerations)) }}
      tolerations: {{ .Values.jarvice_registry.tolerations }}
{{- else if (not (empty .Values.jarvice.tolerations)) }}
      tolerations: {{ .Values.jarvice.tolerations }}
{{- end }}
{{- if (not (empty .Values.jarvice_registry.nodeSelector)) }}
      nodeSelector: {{ .Values.jarvice_registry.nodeSelector }}
{{- else if (not (empty .Values.jarvice.nodeSelector)) }}
      nodeSelector: {{ .Values.jarvice.nodeSelector }}
{{- end }}
{{- if (not (empty .Values.jarvice_registry.nodeAffinity)) }}
      affinity:
        nodeAffinity: {{ .Values.jarvice_registry.nodeAffinity }}
{{- else if (not (empty .Values.jarvice.nodeAffinity)) }}
      affinity:
        nodeAffinity: {{ .Values.jarvice.nodeAffinity }}
{{- end }}
{{- if .Values.jarvice_registry.persistence.enabled }}
      volumes:
        - name: registry-data-vol
          persistentVolumeClaim:
{{- if (empty .Values.jarvice_registry.persistence.existingClaimName) }}
            claimName: jarvice-registry-pvc
{{- else }}
            claimName: {{ .Values.jarvice_registry.persistence.existingClaimName }}
{{- end }}
{{- end }}
      containers:
      - name: jarvice-registry
        image: {{ .Values.jarvice_registry.image }}
        imagePullPolicy: {{ default "IfNotPresent" .Values.jarvice_registry.imagePullPolicy }}
        ports:
          - name: http
            containerPort: 5000
        readinessProbe:
          tcpSocket:
            port: http
          initialDelaySeconds: {{ .Values.jarvice_registry.readinessProbe.initialDelaySeconds }}
          timeoutSeconds: {{ .Values.jarvice_registry.readinessProbe.timeoutSeconds }}
        livenessProbe:
          tcpSocket:
            port: http
          initialDelaySeconds: {{ .Values.jarvice_registry.livenessProbe.initialDelaySeconds }}
          timeoutSeconds: {{ .Values.jarvice_registry.livenessProbe.timeoutSeconds }}
        env:
          - name: REGISTRY_HTTP_ADDR
            value: "{{ .Values.jarvice_registry.env.REGISTRY_HTTP_ADDR }}"
{{- if .Values.jarvice_registry.persistence.enabled }}
        volumeMounts:
        - name: registry-data-vol
          mountPath: /var/lib/registry
{{- end }}
        resources:
{{ toYaml .Values.jarvice_registry.resources | indent 10 }}
---
apiVersion: v1
kind: Service
metadata:
  name: jarvice-registry
  labels:
    {{- include "jarvice.release_labels" . | indent 4 }}
    component: jarvice-registry
spec:
  type: ClusterIP
  ports:
  - protocol: TCP
    port: 5000
    targetPort: 5000
    name: http
  selector:
    deployment: jarvice-registry
---
{{- if or .Values.jarvice_registry.networkPolicy.enabled (and (eq "<nil>" (toString .Values.jarvice_registry.networkPolicy.enabled)) .Values.jarvice.networkPolicy.enabled) }}
apiVersion: networking.k8s.io/v1
kind: NetworkPolicy
metadata:
  name: jarvice-registry
spec:
  podSelector:
    matchLabels:
      deployment: jarvice-registry
  policyTypes:
  - Ingress
  ingress:
  - from:
    - namespaceSelector: {}
    - podSelector: {}
    ports:
    - protocol: TCP
      port: 5000
---
{{- end }}
{{- if (empty .Values.jarvice_registry.ingressHost) }}
apiVersion: v1
kind: Service
metadata:
  name: {{ template "jarvice.name" . }}-registry-lb
  labels:
    {{- include "jarvice.release_labels" . | indent 4 }}
    component: jarvice-registry
spec:
  type: LoadBalancer
  loadBalancerIP: {{ .Values.jarvice_registry.loadBalancerIP }}
  ports:
  - protocol: TCP
    port: 5000
    targetPort: 5000
    name: http
  selector:
    deployment: {{ template "jarvice.name" . }}-registry
---
{{- else }}
apiVersion: {{ template "apiVersion.ingress" . }}
kind: Ingress
metadata:
  name: jarvice-registry
  labels:
    {{- include "jarvice.release_labels" . | indent 4 }}
    component: jarvice-registry
spec:
  rules:
  - host: {{ .Values.jarvice_registry.ingressHost }}
    http:
      paths:
{{- if (eq "/registry" .Values.jarvice_registry.ingressPath) }}
      - backend:
          serviceName: jarvice-registry
          servicePort: http
        path: /registry
{{- else }}
      - backend:
          serviceName: jarvice-registry
          servicePort: http
        path: /
{{- end }}
---
{{- end }}
{{- end }}
