---
apiVersion: v1
kind: Namespace
metadata:
  name: {{ .Values.jarvice.JARVICE_JOBS_NAMESPACE }}
  labels:
    app: {{ template "jarvice.name" . }}
    chart: {{ .Chart.Name }}-{{ .Chart.Version }}
    release: {{ .Release.Name }}
    heritage: "{{ .Release.Service }}"
  annotations:
    "helm.sh/hook": pre-install
---
{{- if eq true .Values.jarvice.kubernetes.createClusterRole -}}
apiVersion: rbac.authorization.k8s.io/v1
kind: ClusterRole
metadata:
  namespace: {{ .Release.Namespace }}
  name: {{ .Values.jarvice.kubernetes.clusterRole }}
  labels:
    app: {{ template "jarvice.name" . }}
    chart: {{ .Chart.Name }}-{{ .Chart.Version }}
    release: {{ .Release.Name }}
    heritage: "{{ .Release.Service }}"
  annotations:
    "helm.sh/hook": pre-install
rules:
- apiGroups: [""]
  resources: ["pods"]
  verbs: ["create", "delete", "deletecollection", "get", "list", "patch", "update", "watch"]
- apiGroups: [""]
  resources: ["pods/log"]
  verbs: ["get", "list", "watch"]
- apiGroups: [""]
  resources: ["pods/status"]
  verbs: ["get", "list", "watch"]
- apiGroups: [""]
  resources: ["configmaps"]
  verbs: ["create", "delete", "deletecollection", "get", "list", "patch", "update", "watch"]
- apiGroups: [""]
  resources: ["endpoints"]
  verbs: ["create", "delete", "deletecollection", "get", "list", "patch", "update", "watch"]
- apiGroups: [""]
  resources: ["persistentvolumeclaims"]
  verbs: ["create", "delete", "deletecollection", "get", "list", "patch", "update", "watch"]
- apiGroups: [""]
  resources: ["secrets"]
  verbs: ["create", "delete", "deletecollection", "get", "list", "patch", "update", "watch"]
- apiGroups: [""]
  resources: ["services"]
  verbs: ["create", "delete", "deletecollection", "get", "list", "patch", "update", "watch"]
- apiGroups: [""]
  resources: ["services/proxy"]
  verbs: ["create", "delete", "deletecollection", "get", "list", "patch", "update", "watch"]
- apiGroups: ["batch"]
  resources: ["jobs"]
  verbs: ["create", "delete", "deletecollection", "get", "list", "patch", "update", "watch"]
- apiGroups: ["extensions"]
  resources: ["ingresses"]
  verbs: ["create", "delete", "deletecollection", "get", "list", "patch", "update", "watch"]
- apiGroups: ["extensions"]
  resources: ["networkpolicies"]
  verbs: ["create", "delete", "deletecollection", "get", "list", "patch", "update", "watch"]
- apiGroups: ["networking.k8s.io"]
  resources: ["networkpolicies"]
  verbs: ["create", "delete", "deletecollection", "get", "list", "patch", "update", "watch"]
---
{{- end }}
{{- if eq true .Values.jarvice.kubernetes.createServiceAccount -}}
apiVersion: v1
kind: ServiceAccount
metadata:
  namespace: {{ .Release.Namespace }}
  name: {{ .Values.jarvice.kubernetes.serviceAccount }}
  labels:
    app: {{ template "jarvice.name" . }}
    chart: {{ .Chart.Name }}-{{ .Chart.Version }}
    release: {{ .Release.Name }}
    heritage: "{{ .Release.Service }}"
  annotations:
    "helm.sh/hook": pre-install
---
{{- end }}
{{- if eq true .Values.jarvice.kubernetes.createServiceAccountCRB -}}
apiVersion: rbac.authorization.k8s.io/v1
kind: ClusterRoleBinding
metadata:
  namespace: {{ .Release.Namespace }}
  name: {{ .Values.jarvice.kubernetes.serviceAccount }}-crb
  labels:
    app: {{ template "jarvice.name" . }}
    chart: {{ .Chart.Name }}-{{ .Chart.Version }}
    release: {{ .Release.Name }}
    heritage: "{{ .Release.Service }}"
  annotations:
    "helm.sh/hook": pre-install
roleRef:
  apiGroup: rbac.authorization.k8s.io
  kind: ClusterRole
  name: admin
  #name: {{ .Values.jarvice.kubernetes.clusterRole }}
subjects:
- kind: ServiceAccount
  name: {{ .Values.jarvice.kubernetes.serviceAccount }}
  namespace: {{ .Release.Namespace }}
---
{{- end }}
apiVersion: v1
kind: Secret
metadata:
  name: jarvice-docker
  labels:
    app: {{ template "jarvice.name" . }}
    chart: "{{ .Chart.Name }}-{{ .Chart.Version }}"
    release: "{{ .Release.Name }}"
    heritage: "{{ .Release.Service }}"
  annotations:
    "helm.sh/hook": pre-install
type: kubernetes.io/dockerconfigjson
data:
  .dockerconfigjson: {{ printf "{\"auths\": {\"%s\": {\"auth\": \"%s\"}}}" .Values.jarvice.JARVICE_SYSTEM_REGISTRY (printf "%s:%s" .Values.jarvice.imagePullSecret.username .Values.jarvice.imagePullSecret.password | b64enc) | b64enc }}
---
{{- if eq true .Values.jarvice_db.enabled -}}
{{- if eq true .Values.jarvice_db.persistence.enabled -}}
apiVersion: v1
kind: PersistentVolumeClaim
metadata:
  namespace: {{ .Release.Namespace }}
  name: jarvice-db-pvc
  labels:
    app: {{ template "jarvice.name" . }}
    chart: {{ .Chart.Name }}-{{ .Chart.Version }}
    release: {{ .Release.Name }}
    heritage: "{{ .Release.Service }}"
  annotations:
    "helm.sh/hook": pre-install
spec:
  volumes:
    - name: jarvice-db-pvc
      persistentVolumeClaim:
        claimName: jarvice-db-pv
  accessModes:
    - {{ .Values.jarvice_db.persistence.accessMode }}
  volumeMode: Filesystem
  resources:
    requests:
      storage: {{ .Values.jarvice_db.persistence.size }}
{{- if .Values.jarvice_db.persistence.storageClass }}
{{- if (eq "-" .Values.jarvice_db.persistence.storageClass) }}
  storageClassName: ""
{{- else }}
  storageClassName: "{{ .Values.jarvice_db.persistence.storageClass }}"
{{- end }}
{{- end }}
---
{{- end }}
apiVersion: apps/v1
kind: Deployment
metadata:
  namespace: {{ .Release.Namespace }}
  name: jarvice-db
  annotations:
    "helm.sh/hook": pre-install
spec:
  replicas: {{ .Values.jarvice_db.replicaCount }}
  selector:
    matchLabels:
      deployment: jarvice-db
  template:
    metadata:
      labels:
        deployment: jarvice-db
        app: {{ template "jarvice.name" . }}
        chart: {{ .Chart.Name }}-{{ .Chart.Version }}
        release: {{ .Release.Name }}
        heritage: "{{ .Release.Service }}"
    spec:
#      hostNetwork: true
#      terminationGracePeriodSeconds: 0
      nodeSelector:
        beta.kubernetes.io/arch: "amd64"
#      imagePullSecrets:
#      - name: jarvice-docker
{{- if eq true .Values.jarvice_db.persistence.enabled -}}
      volumes:
        - name: db-data-vol
          persistentVolumeClaim:
            claimName: jarvice-db-pvc
{{- end }}
      containers:
      - name: jarvice-db
        image: {{ .Values.jarvice_db.image }}
        imagePullPolicy: Always
        ports:
          - name: "jarvice-db"
            containerPort: 3306
        env:
{{- if .Values.jarvice_db.env }}
{{ toYaml .Values.jarvice_db.env | indent 10 }}
{{- end }}
{{- if eq true .Values.jarvice_db.persistence.enabled -}}
        volumeMounts:
        - mountPath: /var/lib/mysql
          name: db-data-vol
{{- end }}
---
apiVersion: v1
kind: Service
metadata:
  namespace: {{ .Release.Namespace }}
  name: jarvice-db
  labels:
    app: {{ template "jarvice.name" . }}
    chart: {{ .Chart.Name }}-{{ .Chart.Version }}
    release: {{ .Release.Name }}
    heritage: "{{ .Release.Service }}"
  annotations:
    "helm.sh/hook": pre-install
spec:
  type: ClusterIP
  ports:
  - protocol: TCP
    port: 3306
    targetPort: 3306
    name: jarvice-db
  selector:
    deployment: jarvice-db
---
{{- end }}
{{- if eq true .Values.jarvice_registry.enabled -}}
{{- if eq true .Values.jarvice_registry.persistence.enabled -}}
apiVersion: v1
kind: PersistentVolumeClaim
metadata:
  namespace: {{ .Release.Namespace }}
  name: jarvice-registry-pvc
  labels:
    app: {{ template "jarvice.name" . }}
    chart: {{ .Chart.Name }}-{{ .Chart.Version }}
    release: {{ .Release.Name }}
    heritage: "{{ .Release.Service }}"
  annotations:
    "helm.sh/hook": pre-install
spec:
  accessModes:
    - {{ .Values.jarvice_registry.persistence.accessMode }}
  volumeMode: Filesystem
  resources:
    requests:
      storage: {{ .Values.jarvice_registry.persistence.size }}
{{- if .Values.jarvice_registry.persistence.storageClass }}
{{- if (eq "-" .Values.jarvice_registry.persistence.storageClass) }}
  storageClassName: ""
{{- else }}
  storageClassName: "{{ .Values.jarvice_registry.persistence.storageClass }}"
{{- end }}
{{- end }}
---
{{- end }}
apiVersion: v1
kind: ConfigMap
metadata:
  namespace: {{ .Release.Namespace }}
  name: jarvice-registry-tls-configmap
  labels:
    app: {{ template "jarvice.name" . }}
    chart: "{{ .Chart.Name }}-{{ .Chart.Version }}"
    release: "{{ .Release.Name }}"
    heritage: "{{ .Release.Service }}"
  annotations:
    "helm.sh/hook": pre-install
data:
{{ toYaml .Values.jarvice_registry.data | indent 2 }}
---
apiVersion: apps/v1
kind: Deployment
metadata:
  namespace: {{ .Release.Namespace }}
  name: jarvice-registry
  annotations:
    "helm.sh/hook": pre-install
spec:
  replicas: {{ .Values.jarvice_registry.replicaCount }}
  selector:
    matchLabels:
      deployment: jarvice-registry
  template:
    metadata:
      labels:
        deployment: jarvice-registry
        app: {{ template "jarvice.name" . }}
        chart: {{ .Chart.Name }}-{{ .Chart.Version }}
        release: {{ .Release.Name }}
        heritage: "{{ .Release.Service }}"
    spec:
#      hostNetwork: true
#      terminationGracePeriodSeconds: 0
      nodeSelector:
        beta.kubernetes.io/arch: "amd64"
#      imagePullSecrets:
#      - name: jarvice-docker
      volumes:
        - name: registry-tls-cert
          configMap:
            name: jarvice-registry-tls-configmap
{{- if eq true .Values.jarvice_registry.persistence.enabled -}}
        - name: registry-data-vol
          persistentVolumeClaim:
            claimName: jarvice-registry-pvc
{{- end }}
      containers:
      - name: jarvice-registry
        image: {{ .Values.jarvice_registry.image }}
        imagePullPolicy: Always
        ports:
          - name: "registry"
            containerPort: 5000
        env:
{{- if .Values.jarvice_registry.env }}
{{ toYaml .Values.jarvice_registry.env | indent 10 }}
{{- end }}
        volumeMounts:
        - name: registry-tls-cert
          mountPath: /etc/ssl/docker
          readOnly: true
{{- if eq true .Values.jarvice_registry.persistence.enabled -}}
        - name: registry-data-vol
          mountPath: /var/lib/registry
{{- end }}
---
apiVersion: v1
kind: Service
metadata:
  namespace: {{ .Release.Namespace }}
  name: jarvice-registry
  labels:
    app: {{ template "jarvice.name" . }}
    chart: {{ .Chart.Name }}-{{ .Chart.Version }}
    release: {{ .Release.Name }}
    heritage: "{{ .Release.Service }}"
  annotations:
    "helm.sh/hook": pre-install
spec:
  type: ClusterIP
  ports:
  - protocol: TCP
    port: 5000
    targetPort: 5000
    name: registry
  selector:
    deployment: jarvice-registry
---
{{- end }}
